function (self, unitId, unitFrame, envTable, modTable)
    
    --custom indicator options
    --envTable.Texture = [[Interface\AddOns\Plater\media\cross_64]]
    envTable.HealerTexture = [[Interface\AddOns\ElvUI\Media\Textures\Healer]]
    envTable.TankTexture = [[Interface\AddOns\ElvUI\Media\Textures\Tank]]
    envTable.Width = 15
    envTable.Height = 15
    
    envTable.Anchor = {
        side = 7, --topright
        x = envTable.Width / 2, --x offset
        y = -envTable.Width / 2, --y offset
    }
    
    unitFrame.RoleTexture = unitFrame.RoleTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, "overlay")
    unitFrame.RoleTexture.width = envTable.Width
    unitFrame.RoleTexture.height = envTable.Height
    Plater.SetAnchor (unitFrame.RoleTexture, envTable.Anchor)
    
    local myrealm = GetRealmName()
    
    local a1,a2 = '','[%s%-]'
    local function ShortenRealm(realm)
        return gsub(realm, a2, a1)
    end
    envTable.ShortenRealm = ShortenRealm
    
    local a3 = format('%%-%s', ShortenRealm(myrealm))
    local function StripMyRealm(name)
        return gsub(name, a3, a1)
    end
    
    
    local healerSpecIDs = {
        65,      --Paladin Holy
        105,    --Druid Restoration
        256,    --Priest Discipline
        257,    --Priest Holy
        264,    --Shaman Restoration
        270,    --Monk Mistweaver
    }
    
    local tankSpecIDs = {
        66,        --Paladin Protection
        581,    --Demon Hunter Vengeance
        104,    --Druid Guardian
        268,    --Monk Brewmaster
        73,     --Warrior Protection
        250,    --Death Knight Blood
    }
    
    local Healers, HealerSpecs = {}, {}
    local Tanks, TankSpecs = {}, {}
    envTable.Healers = Healers
    envTable.Tanks = Tanks
    
    for _, specID in pairs(healerSpecIDs) do
        local _, name = GetSpecializationInfoByID(specID)
        if name and not HealerSpecs[name] then
            HealerSpecs[name] = true
        end
    end
    
    for _, specID in pairs(tankSpecIDs) do
        local _, name = GetSpecializationInfoByID(specID)
        if name and not TankSpecs[name] then
            TankSpecs[name] = true
        end
    end
    
    local function Event()
        local _, instanceType = GetInstanceInfo()
        if instanceType == 'pvp' or instanceType == 'arena' then
            local numOpps = GetNumArenaOpponentSpecs()
            if numOpps == 0 then
                for i = 1, GetNumBattlefieldScores() do
                    local name, _, _, _, _, _, _, _, _, _, _, _, _, _, _, talentSpec = GetBattlefieldScore(i)
                    name = name and name ~= UNKNOWN and StripMyRealm(name)
                    if name then
                        if HealerSpecs[talentSpec] then
                            Healers[name] = talentSpec
                        elseif Healers[name] then
                            Healers[name] = nil;
                        end
                        if TankSpecs[talentSpec] then
                            Tanks[name] = talentSpec
                        elseif Tanks[name] then
                            Tanks[name] = nil;
                        end
                    end
                end
            elseif numOpps >= 1 then
                for i = 1, numOpps do
                    local name, realm = UnitName(format('arena%d', i))
                    if name and name ~= UNKNOWN then
                        realm = (realm and realm ~= '') and ShortenRealm(realm)
                        if realm then name = name..'-'..realm end
                        
                        local s = GetArenaOpponentSpec(i)
                        local _, talentSpec = nil, UNKNOWN
                        
                        if s and s > 0 then
                            _, talentSpec = GetSpecializationInfoByID(s)
                        end
                        
                        if talentSpec and talentSpec ~= UNKNOWN then
                            if HealerSpecs[talentSpec] then
                                Healers[name] = talentSpec
                            end
                            if TankSpecs[talentSpec] then
                                Tanks[name] = talentSpec
                            end
                        end
                    end
                end
            end
        end
    end
    
    local function WipeTable()
        wipe(Healers)
        wipe(Tanks)
    end
    
    local frame, events = CreateFrame("Frame"), {};
    function events:ARENA_OPPONENT_UPDATE(...)
        Event()
    end
    function events:UPDATE_BATTLEFIELD_SCORE(...)
        Event()
    end
    function events:PLAYER_ENTERING_WORLD(...)
        WipeTable()
    end
    frame:SetScript("OnEvent", function(self, event, ...)
            events[event](self, ...); 
    end);
    for k, v in pairs(events) do
        frame:RegisterEvent(k); 
    end
    
end
